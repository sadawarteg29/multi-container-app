version: '3'

services:
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        labels:
            - "com.example.description=Frontent Student webapp"
            - "com.example.language=Angular 8"
        ports:
            - "80:80"
        volumes:
            - angular_frontend:/usr/share/nginx/html
        depends_on:
            - mysql
            - backend
        networks:
            - student_network

    backend_proxy:
        build:
            context: ./backend_proxy
            dockerfile: Dockerfile
        ports:
            - "8000:80"
        depends_on:
            - backend
        networks:
            - student_network

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        labels:
            - "com.example.description=Backend Student webapp"
            - "com.example.language=Node JS"
        ports:
            - "3000:3000"
        volumes:
            - node_backend:/app
        environment:
            DATABASE_URL: "mysql://user@mysql/name_db"
        depends_on:
            - mysql
        networks: 
            - student_network

    mysql:
        image: mariadb:10.3
        container_name: mysql
        volumes:
            - testsql:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: name_db
            MYSQL_USER: user
            MYSQL_PASSWORD: password
        ports:
            - "3306:3306"
        networks:
            - student_network

volumes:
    testsql:
    node_backend:
    angular_frontend:

networks:
    student_network:
